from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

class Customer(db.Model):
    __tablename__ = 'customers'
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String, nullable=False)
    email = db.Column(db.String, nullable=False)
    phone = db.Column(db.String)
    address = db.Column(db.String)
    contacts = db.relationship('Contact', backref='customer', lazy=True)
    opportunities = db.relationship('Opportunity', backref='customer', lazy=True)
    interactions = db.relationship('Interaction', backref='customer', lazy=True)

class Contact(db.Model):
    __tablename__ = 'contacts'
    id = db.Column(db.Integer, primary_key=True)
    customer_id = db.Column(db.Integer, db.ForeignKey('customers.id'), nullable=False)
    name = db.Column(db.String, nullable=False)
    email = db.Column(db.String, nullable=False)
    phone = db.Column(db.String)

class Opportunity(db.Model):
    __tablename__ = 'opportunities'
    id = db.Column(db.Integer, primary_key=True)
    customer_id = db.Column(db.Integer, db.ForeignKey('customers.id'), nullable=False)
    title = db.Column(db.String, nullable=False)
    description = db.Column(db.String)
    stage = db.Column(db.String, nullable=False)
    value = db.Column(db.Float, nullable=False)

class Interaction(db.Model):
    __tablename__ = 'interactions'
    id = db.Column(db.Integer, primary_key=True)
    customer_id = db.Column(db.Integer, db.ForeignKey('customers.id'), nullable=False)
    type = db.Column(db.String, nullable=False)  # call, meeting, email, etc.
    notes = db.Column(db.String, nullable=False)
    date = db.Column(db.DateTime, nullable=False)
